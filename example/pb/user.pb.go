// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// common object
type UserInfo struct {
	Name         string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Img          string  `protobuf:"bytes,2,opt,name=img" json:"img,omitempty"`
	Balance      float32 `protobuf:"fixed32,3,opt,name=balance" json:"balance,omitempty"`
	Tel          string  `protobuf:"bytes,4,opt,name=tel" json:"tel,omitempty"`
	Pricode      string  `protobuf:"bytes,5,opt,name=pricode" json:"pricode,omitempty"`
	Cls          string  `protobuf:"bytes,6,opt,name=cls" json:"cls,omitempty"`
	Oauth        int32   `protobuf:"varint,7,opt,name=oauth" json:"oauth,omitempty"`
	SchoolCode   string  `protobuf:"bytes,8,opt,name=schoolCode" json:"schoolCode,omitempty"`
	Id           int64   `protobuf:"varint,9,opt,name=id" json:"id,omitempty"`
	Uid          int64   `protobuf:"varint,10,opt,name=uid" json:"uid,omitempty"`
	Qid          int64   `protobuf:"varint,11,opt,name=qid" json:"qid,omitempty"`
	Token        string  `protobuf:"bytes,12,opt,name=token" json:"token,omitempty"`
	Bond         int32   `protobuf:"varint,13,opt,name=bond" json:"bond,omitempty"`
	FreeBondType string  `protobuf:"bytes,14,opt,name=freeBondType" json:"freeBondType,omitempty"`
	Idcard       string  `protobuf:"bytes,15,opt,name=idcard" json:"idcard,omitempty"`
	Realname     string  `protobuf:"bytes,16,opt,name=realname" json:"realname,omitempty"`
	Createtime   int64   `protobuf:"varint,17,opt,name=createtime" json:"createtime,omitempty"`
	Otime        int64   `protobuf:"varint,18,opt,name=otime" json:"otime,omitempty"`
	ErrorCode    int64   `protobuf:"varint,19,opt,name=errorCode" json:"errorCode,omitempty"`
	Fbalance     float32 `protobuf:"fixed32,20,opt,name=fbalance" json:"fbalance,omitempty"`
	Stuid        string  `protobuf:"bytes,21,opt,name=stuid" json:"stuid,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *UserInfo) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *UserInfo) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *UserInfo) GetPricode() string {
	if m != nil {
		return m.Pricode
	}
	return ""
}

func (m *UserInfo) GetCls() string {
	if m != nil {
		return m.Cls
	}
	return ""
}

func (m *UserInfo) GetOauth() int32 {
	if m != nil {
		return m.Oauth
	}
	return 0
}

func (m *UserInfo) GetSchoolCode() string {
	if m != nil {
		return m.SchoolCode
	}
	return ""
}

func (m *UserInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetQid() int64 {
	if m != nil {
		return m.Qid
	}
	return 0
}

func (m *UserInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserInfo) GetBond() int32 {
	if m != nil {
		return m.Bond
	}
	return 0
}

func (m *UserInfo) GetFreeBondType() string {
	if m != nil {
		return m.FreeBondType
	}
	return ""
}

func (m *UserInfo) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *UserInfo) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *UserInfo) GetCreatetime() int64 {
	if m != nil {
		return m.Createtime
	}
	return 0
}

func (m *UserInfo) GetOtime() int64 {
	if m != nil {
		return m.Otime
	}
	return 0
}

func (m *UserInfo) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *UserInfo) GetFbalance() float32 {
	if m != nil {
		return m.Fbalance
	}
	return 0
}

func (m *UserInfo) GetStuid() string {
	if m != nil {
		return m.Stuid
	}
	return ""
}

type SimpleUserInfo struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	School     string `protobuf:"bytes,2,opt,name=school" json:"school,omitempty"`
	Grade      string `protobuf:"bytes,3,opt,name=grade" json:"grade,omitempty"`
	Realname   string `protobuf:"bytes,4,opt,name=realname" json:"realname,omitempty"`
	Sex        int32  `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	Byear      int32  `protobuf:"varint,6,opt,name=byear" json:"byear,omitempty"`
	Bmonth     int32  `protobuf:"varint,7,opt,name=bmonth" json:"bmonth,omitempty"`
	Bday       int32  `protobuf:"varint,8,opt,name=bday" json:"bday,omitempty"`
	Createtime int64  `protobuf:"varint,9,opt,name=createtime" json:"createtime,omitempty"`
	Otime      int64  `protobuf:"varint,10,opt,name=otime" json:"otime,omitempty"`
	Source     int32  `protobuf:"varint,11,opt,name=source" json:"source,omitempty"`
	State      int32  `protobuf:"varint,12,opt,name=state" json:"state,omitempty"`
	ErrorCode  int64  `protobuf:"varint,13,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *SimpleUserInfo) Reset()                    { *m = SimpleUserInfo{} }
func (m *SimpleUserInfo) String() string            { return proto.CompactTextString(m) }
func (*SimpleUserInfo) ProtoMessage()               {}
func (*SimpleUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *SimpleUserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleUserInfo) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *SimpleUserInfo) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func (m *SimpleUserInfo) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *SimpleUserInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *SimpleUserInfo) GetByear() int32 {
	if m != nil {
		return m.Byear
	}
	return 0
}

func (m *SimpleUserInfo) GetBmonth() int32 {
	if m != nil {
		return m.Bmonth
	}
	return 0
}

func (m *SimpleUserInfo) GetBday() int32 {
	if m != nil {
		return m.Bday
	}
	return 0
}

func (m *SimpleUserInfo) GetCreatetime() int64 {
	if m != nil {
		return m.Createtime
	}
	return 0
}

func (m *SimpleUserInfo) GetOtime() int64 {
	if m != nil {
		return m.Otime
	}
	return 0
}

func (m *SimpleUserInfo) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *SimpleUserInfo) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SimpleUserInfo) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type PartnerUser struct {
	UserId         int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PartnerType    int32  `protobuf:"varint,2,opt,name=partnerType" json:"partnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,3,opt,name=partnerId" json:"partnerId,omitempty"`
	PartnerStatus  int32  `protobuf:"varint,4,opt,name=partnerStatus" json:"partnerStatus,omitempty"`
	BindTime       int64  `protobuf:"varint,5,opt,name=bindTime" json:"bindTime,omitempty"`
	RemarkSpec     string `protobuf:"bytes,6,opt,name=remarkSpec" json:"remarkSpec,omitempty"`
	Nickname       string `protobuf:"bytes,7,opt,name=nickname" json:"nickname,omitempty"`
	ImgUrl         string `protobuf:"bytes,8,opt,name=imgUrl" json:"imgUrl,omitempty"`
	Gender         int32  `protobuf:"varint,9,opt,name=gender" json:"gender,omitempty"`
	PlatForm       int32  `protobuf:"varint,10,opt,name=platForm" json:"platForm,omitempty"`
	SubPartnerType int32  `protobuf:"varint,11,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	SubPartnerId   string `protobuf:"bytes,12,opt,name=subPartnerId" json:"subPartnerId,omitempty"`
	ExtDetail      string `protobuf:"bytes,13,opt,name=extDetail" json:"extDetail,omitempty"`
	ErrorCode      int64  `protobuf:"varint,14,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *PartnerUser) Reset()                    { *m = PartnerUser{} }
func (m *PartnerUser) String() string            { return proto.CompactTextString(m) }
func (*PartnerUser) ProtoMessage()               {}
func (*PartnerUser) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *PartnerUser) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PartnerUser) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *PartnerUser) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *PartnerUser) GetPartnerStatus() int32 {
	if m != nil {
		return m.PartnerStatus
	}
	return 0
}

func (m *PartnerUser) GetBindTime() int64 {
	if m != nil {
		return m.BindTime
	}
	return 0
}

func (m *PartnerUser) GetRemarkSpec() string {
	if m != nil {
		return m.RemarkSpec
	}
	return ""
}

func (m *PartnerUser) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PartnerUser) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *PartnerUser) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *PartnerUser) GetPlatForm() int32 {
	if m != nil {
		return m.PlatForm
	}
	return 0
}

func (m *PartnerUser) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *PartnerUser) GetSubPartnerId() string {
	if m != nil {
		return m.SubPartnerId
	}
	return ""
}

func (m *PartnerUser) GetExtDetail() string {
	if m != nil {
		return m.ExtDetail
	}
	return ""
}

func (m *PartnerUser) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type Userlocation struct {
	Id        int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Userid    int64   `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	LocTime   int64   `protobuf:"varint,3,opt,name=loc_time,json=locTime" json:"loc_time,omitempty"`
	Lng       float32 `protobuf:"fixed32,4,opt,name=lng" json:"lng,omitempty"`
	Lat       float32 `protobuf:"fixed32,5,opt,name=lat" json:"lat,omitempty"`
	Cityindex int32   `protobuf:"varint,6,opt,name=cityindex" json:"cityindex,omitempty"`
}

func (m *Userlocation) Reset()                    { *m = Userlocation{} }
func (m *Userlocation) String() string            { return proto.CompactTextString(m) }
func (*Userlocation) ProtoMessage()               {}
func (*Userlocation) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *Userlocation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Userlocation) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *Userlocation) GetLocTime() int64 {
	if m != nil {
		return m.LocTime
	}
	return 0
}

func (m *Userlocation) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *Userlocation) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Userlocation) GetCityindex() int32 {
	if m != nil {
		return m.Cityindex
	}
	return 0
}

type FreeGoUser struct {
	AuthStatus    bool   `protobuf:"varint,1,opt,name=authStatus" json:"authStatus,omitempty"`
	Avatar        string `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	CardType      string `protobuf:"bytes,3,opt,name=cardType" json:"cardType,omitempty"`
	DepositStatus bool   `protobuf:"varint,4,opt,name=depositStatus" json:"depositStatus,omitempty"`
	DeviceToken   string `protobuf:"bytes,5,opt,name=deviceToken" json:"deviceToken,omitempty"`
	Id            string `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	Nickname      string `protobuf:"bytes,7,opt,name=nickname" json:"nickname,omitempty"`
	Phone         string `protobuf:"bytes,8,opt,name=phone" json:"phone,omitempty"`
	RealName      string `protobuf:"bytes,9,opt,name=realName" json:"realName,omitempty"`
	Sex           string `protobuf:"bytes,10,opt,name=sex" json:"sex,omitempty"`
	UserStatus    string `protobuf:"bytes,11,opt,name=userStatus" json:"userStatus,omitempty"`
}

func (m *FreeGoUser) Reset()                    { *m = FreeGoUser{} }
func (m *FreeGoUser) String() string            { return proto.CompactTextString(m) }
func (*FreeGoUser) ProtoMessage()               {}
func (*FreeGoUser) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *FreeGoUser) GetAuthStatus() bool {
	if m != nil {
		return m.AuthStatus
	}
	return false
}

func (m *FreeGoUser) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *FreeGoUser) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *FreeGoUser) GetDepositStatus() bool {
	if m != nil {
		return m.DepositStatus
	}
	return false
}

func (m *FreeGoUser) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *FreeGoUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FreeGoUser) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *FreeGoUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *FreeGoUser) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *FreeGoUser) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *FreeGoUser) GetUserStatus() string {
	if m != nil {
		return m.UserStatus
	}
	return ""
}

type FreeGoUserToken struct {
	RefreshToken       string `protobuf:"bytes,1,opt,name=refreshToken" json:"refreshToken,omitempty"`
	RefreshTokenExpire int64  `protobuf:"varint,2,opt,name=refreshTokenExpire" json:"refreshTokenExpire,omitempty"`
	Token              string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	TokenExpire        int64  `protobuf:"varint,4,opt,name=tokenExpire" json:"tokenExpire,omitempty"`
}

func (m *FreeGoUserToken) Reset()                    { *m = FreeGoUserToken{} }
func (m *FreeGoUserToken) String() string            { return proto.CompactTextString(m) }
func (*FreeGoUserToken) ProtoMessage()               {}
func (*FreeGoUserToken) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *FreeGoUserToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *FreeGoUserToken) GetRefreshTokenExpire() int64 {
	if m != nil {
		return m.RefreshTokenExpire
	}
	return 0
}

func (m *FreeGoUserToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *FreeGoUserToken) GetTokenExpire() int64 {
	if m != nil {
		return m.TokenExpire
	}
	return 0
}

type QueryUserByTokenRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *QueryUserByTokenRequest) Reset()                    { *m = QueryUserByTokenRequest{} }
func (m *QueryUserByTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryUserByTokenRequest) ProtoMessage()               {}
func (*QueryUserByTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *QueryUserByTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type QueryUserByTelRequest struct {
	Tel string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
}

func (m *QueryUserByTelRequest) Reset()                    { *m = QueryUserByTelRequest{} }
func (m *QueryUserByTelRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryUserByTelRequest) ProtoMessage()               {}
func (*QueryUserByTelRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *QueryUserByTelRequest) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

type QueryUserResponse struct {
	Name       string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Img        string  `protobuf:"bytes,2,opt,name=img" json:"img,omitempty"`
	Balance    float32 `protobuf:"fixed32,3,opt,name=balance" json:"balance,omitempty"`
	Tel        string  `protobuf:"bytes,4,opt,name=tel" json:"tel,omitempty"`
	Pricode    string  `protobuf:"bytes,5,opt,name=pricode" json:"pricode,omitempty"`
	Cls        int32   `protobuf:"varint,6,opt,name=cls" json:"cls,omitempty"`
	Oauth      int32   `protobuf:"varint,7,opt,name=oauth" json:"oauth,omitempty"`
	SchoolCode string  `protobuf:"bytes,8,opt,name=schoolCode" json:"schoolCode,omitempty"`
	Cid        string  `protobuf:"bytes,9,opt,name=cid" json:"cid,omitempty"`
}

func (m *QueryUserResponse) Reset()                    { *m = QueryUserResponse{} }
func (m *QueryUserResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryUserResponse) ProtoMessage()               {}
func (*QueryUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *QueryUserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryUserResponse) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *QueryUserResponse) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *QueryUserResponse) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *QueryUserResponse) GetPricode() string {
	if m != nil {
		return m.Pricode
	}
	return ""
}

func (m *QueryUserResponse) GetCls() int32 {
	if m != nil {
		return m.Cls
	}
	return 0
}

func (m *QueryUserResponse) GetOauth() int32 {
	if m != nil {
		return m.Oauth
	}
	return 0
}

func (m *QueryUserResponse) GetSchoolCode() string {
	if m != nil {
		return m.SchoolCode
	}
	return ""
}

func (m *QueryUserResponse) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type QueryUserByIdRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *QueryUserByIdRequest) Reset()                    { *m = QueryUserByIdRequest{} }
func (m *QueryUserByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryUserByIdRequest) ProtoMessage()               {}
func (*QueryUserByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *QueryUserByIdRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type QueryUserByIdResponse struct {
	Name         string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Img          string  `protobuf:"bytes,2,opt,name=img" json:"img,omitempty"`
	Balance      float32 `protobuf:"fixed32,3,opt,name=balance" json:"balance,omitempty"`
	Tel          string  `protobuf:"bytes,4,opt,name=tel" json:"tel,omitempty"`
	Pricode      string  `protobuf:"bytes,5,opt,name=pricode" json:"pricode,omitempty"`
	Cls          int32   `protobuf:"varint,6,opt,name=cls" json:"cls,omitempty"`
	Oauth        int32   `protobuf:"varint,7,opt,name=oauth" json:"oauth,omitempty"`
	SchoolCode   string  `protobuf:"bytes,8,opt,name=schoolCode" json:"schoolCode,omitempty"`
	Cid          string  `protobuf:"bytes,9,opt,name=cid" json:"cid,omitempty"`
	Id           int64   `protobuf:"varint,10,opt,name=id" json:"id,omitempty"`
	Uid          int64   `protobuf:"varint,11,opt,name=uid" json:"uid,omitempty"`
	Qid          int64   `protobuf:"varint,12,opt,name=qid" json:"qid,omitempty"`
	Bond         int32   `protobuf:"varint,13,opt,name=bond" json:"bond,omitempty"`
	FreeBondType string  `protobuf:"bytes,14,opt,name=freeBondType" json:"freeBondType,omitempty"`
	Idcard       string  `protobuf:"bytes,15,opt,name=idcard" json:"idcard,omitempty"`
	Realname     string  `protobuf:"bytes,16,opt,name=realname" json:"realname,omitempty"`
	Token        string  `protobuf:"bytes,17,opt,name=token" json:"token,omitempty"`
}

func (m *QueryUserByIdResponse) Reset()                    { *m = QueryUserByIdResponse{} }
func (m *QueryUserByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryUserByIdResponse) ProtoMessage()               {}
func (*QueryUserByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *QueryUserByIdResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryUserByIdResponse) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *QueryUserByIdResponse) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *QueryUserByIdResponse) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *QueryUserByIdResponse) GetPricode() string {
	if m != nil {
		return m.Pricode
	}
	return ""
}

func (m *QueryUserByIdResponse) GetCls() int32 {
	if m != nil {
		return m.Cls
	}
	return 0
}

func (m *QueryUserByIdResponse) GetOauth() int32 {
	if m != nil {
		return m.Oauth
	}
	return 0
}

func (m *QueryUserByIdResponse) GetSchoolCode() string {
	if m != nil {
		return m.SchoolCode
	}
	return ""
}

func (m *QueryUserByIdResponse) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *QueryUserByIdResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QueryUserByIdResponse) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *QueryUserByIdResponse) GetQid() int64 {
	if m != nil {
		return m.Qid
	}
	return 0
}

func (m *QueryUserByIdResponse) GetBond() int32 {
	if m != nil {
		return m.Bond
	}
	return 0
}

func (m *QueryUserByIdResponse) GetFreeBondType() string {
	if m != nil {
		return m.FreeBondType
	}
	return ""
}

func (m *QueryUserByIdResponse) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *QueryUserByIdResponse) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *QueryUserByIdResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateUserRequest struct {
	Tel      string  `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Bindtime int64   `protobuf:"varint,2,opt,name=bindtime" json:"bindtime,omitempty"`
	Source   int32   `protobuf:"varint,3,opt,name=source" json:"source,omitempty"`
	Token    string  `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	Balance  float32 `protobuf:"fixed32,5,opt,name=balance" json:"balance,omitempty"`
	Fbalance float32 `protobuf:"fixed32,6,opt,name=fbalance" json:"fbalance,omitempty"`
	Name     string  `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Oauth    int32   `protobuf:"varint,8,opt,name=oauth" json:"oauth,omitempty"`
	Bday     int32   `protobuf:"varint,9,opt,name=bday" json:"bday,omitempty"`
	Byear    int32   `protobuf:"varint,10,opt,name=byear" json:"byear,omitempty"`
	Bmonth   int32   `protobuf:"varint,11,opt,name=bmonth" json:"bmonth,omitempty"`
	Status   int32   `protobuf:"varint,12,opt,name=status" json:"status,omitempty"`
	Channel  string  `protobuf:"bytes,13,opt,name=channel" json:"channel,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *CreateUserRequest) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *CreateUserRequest) GetBindtime() int64 {
	if m != nil {
		return m.Bindtime
	}
	return 0
}

func (m *CreateUserRequest) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *CreateUserRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CreateUserRequest) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *CreateUserRequest) GetFbalance() float32 {
	if m != nil {
		return m.Fbalance
	}
	return 0
}

func (m *CreateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserRequest) GetOauth() int32 {
	if m != nil {
		return m.Oauth
	}
	return 0
}

func (m *CreateUserRequest) GetBday() int32 {
	if m != nil {
		return m.Bday
	}
	return 0
}

func (m *CreateUserRequest) GetByear() int32 {
	if m != nil {
		return m.Byear
	}
	return 0
}

func (m *CreateUserRequest) GetBmonth() int32 {
	if m != nil {
		return m.Bmonth
	}
	return 0
}

func (m *CreateUserRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateUserRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type CreateUserResponse struct {
	Id        int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ErrorCode int64 `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{12} }

func (m *CreateUserResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateUserResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type UpdateFreeBondRequest struct {
	UserId              int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Type                int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	LinkType            int32 `protobuf:"varint,3,opt,name=linkType" json:"linkType,omitempty"`
	CurrentfreeBondType int64 `protobuf:"varint,4,opt,name=currentfreeBondType" json:"currentfreeBondType,omitempty"`
}

func (m *UpdateFreeBondRequest) Reset()                    { *m = UpdateFreeBondRequest{} }
func (m *UpdateFreeBondRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateFreeBondRequest) ProtoMessage()               {}
func (*UpdateFreeBondRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *UpdateFreeBondRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdateFreeBondRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdateFreeBondRequest) GetLinkType() int32 {
	if m != nil {
		return m.LinkType
	}
	return 0
}

func (m *UpdateFreeBondRequest) GetCurrentfreeBondType() int64 {
	if m != nil {
		return m.CurrentfreeBondType
	}
	return 0
}

type UpdateUserRequest struct {
	UserId  int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14} }

func (m *UpdateUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdateUserRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type UpdateUserResponse struct {
	RowsAffected int32 `protobuf:"varint,1,opt,name=rowsAffected" json:"rowsAffected,omitempty"`
	ErrorCode    int64 `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *UpdateUserResponse) Reset()                    { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()               {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{15} }

func (m *UpdateUserResponse) GetRowsAffected() int32 {
	if m != nil {
		return m.RowsAffected
	}
	return 0
}

func (m *UpdateUserResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type UpdatezxUserRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (m *UpdatezxUserRequest) Reset()                    { *m = UpdatezxUserRequest{} }
func (m *UpdatezxUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatezxUserRequest) ProtoMessage()               {}
func (*UpdatezxUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{16} }

func (m *UpdatezxUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdatezxUserRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type UpdatezxUserResponse struct {
	Num int32 `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
}

func (m *UpdatezxUserResponse) Reset()                    { *m = UpdatezxUserResponse{} }
func (m *UpdatezxUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatezxUserResponse) ProtoMessage()               {}
func (*UpdatezxUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{17} }

func (m *UpdatezxUserResponse) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type CreatezxUserRequest struct {
	UserId int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Idcard string `protobuf:"bytes,2,opt,name=idcard" json:"idcard,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
}

func (m *CreatezxUserRequest) Reset()                    { *m = CreatezxUserRequest{} }
func (m *CreatezxUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatezxUserRequest) ProtoMessage()               {}
func (*CreatezxUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{18} }

func (m *CreatezxUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreatezxUserRequest) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *CreatezxUserRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type CreatezxUserResponse struct {
	Num int32 `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
}

func (m *CreatezxUserResponse) Reset()                    { *m = CreatezxUserResponse{} }
func (m *CreatezxUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatezxUserResponse) ProtoMessage()               {}
func (*CreatezxUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{19} }

func (m *CreatezxUserResponse) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type QueryzxUserByUserIdRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *QueryzxUserByUserIdRequest) Reset()                    { *m = QueryzxUserByUserIdRequest{} }
func (m *QueryzxUserByUserIdRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryzxUserByUserIdRequest) ProtoMessage()               {}
func (*QueryzxUserByUserIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{20} }

func (m *QueryzxUserByUserIdRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type QueryzxUserByUserIdResponse struct {
	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OfoIdcard string `protobuf:"bytes,2,opt,name=ofo_idcard,json=ofoIdcard" json:"ofo_idcard,omitempty"`
	ZxIdcard  string `protobuf:"bytes,3,opt,name=zx_idcard,json=zxIdcard" json:"zx_idcard,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
}

func (m *QueryzxUserByUserIdResponse) Reset()                    { *m = QueryzxUserByUserIdResponse{} }
func (m *QueryzxUserByUserIdResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryzxUserByUserIdResponse) ProtoMessage()               {}
func (*QueryzxUserByUserIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{21} }

func (m *QueryzxUserByUserIdResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryzxUserByUserIdResponse) GetOfoIdcard() string {
	if m != nil {
		return m.OfoIdcard
	}
	return ""
}

func (m *QueryzxUserByUserIdResponse) GetZxIdcard() string {
	if m != nil {
		return m.ZxIdcard
	}
	return ""
}

func (m *QueryzxUserByUserIdResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type QueryzxUserByUserIdAndStatusRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (m *QueryzxUserByUserIdAndStatusRequest) Reset()         { *m = QueryzxUserByUserIdAndStatusRequest{} }
func (m *QueryzxUserByUserIdAndStatusRequest) String() string { return proto.CompactTextString(m) }
func (*QueryzxUserByUserIdAndStatusRequest) ProtoMessage()    {}
func (*QueryzxUserByUserIdAndStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{22}
}

func (m *QueryzxUserByUserIdAndStatusRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryzxUserByUserIdAndStatusRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type UpdatePartnerUserRequest struct {
	UserId         int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PartnerType    int32  `protobuf:"varint,2,opt,name=partnerType" json:"partnerType,omitempty"`
	SubPartnerType int32  `protobuf:"varint,3,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,4,opt,name=partnerId" json:"partnerId,omitempty"`
	SubPartnerId   string `protobuf:"bytes,5,opt,name=subPartnerId" json:"subPartnerId,omitempty"`
	PartnerStatus  int32  `protobuf:"varint,6,opt,name=partnerStatus" json:"partnerStatus,omitempty"`
	DataContent    string `protobuf:"bytes,7,opt,name=dataContent" json:"dataContent,omitempty"`
	UpdateDetail   int32  `protobuf:"varint,9,opt,name=updateDetail" json:"updateDetail,omitempty"`
	ExtDetail      string `protobuf:"bytes,10,opt,name=extDetail" json:"extDetail,omitempty"`
}

func (m *UpdatePartnerUserRequest) Reset()                    { *m = UpdatePartnerUserRequest{} }
func (m *UpdatePartnerUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePartnerUserRequest) ProtoMessage()               {}
func (*UpdatePartnerUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{23} }

func (m *UpdatePartnerUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdatePartnerUserRequest) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *UpdatePartnerUserRequest) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *UpdatePartnerUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *UpdatePartnerUserRequest) GetSubPartnerId() string {
	if m != nil {
		return m.SubPartnerId
	}
	return ""
}

func (m *UpdatePartnerUserRequest) GetPartnerStatus() int32 {
	if m != nil {
		return m.PartnerStatus
	}
	return 0
}

func (m *UpdatePartnerUserRequest) GetDataContent() string {
	if m != nil {
		return m.DataContent
	}
	return ""
}

func (m *UpdatePartnerUserRequest) GetUpdateDetail() int32 {
	if m != nil {
		return m.UpdateDetail
	}
	return 0
}

func (m *UpdatePartnerUserRequest) GetExtDetail() string {
	if m != nil {
		return m.ExtDetail
	}
	return ""
}

type UpdatePartnerUserResponse struct {
	RowsAffected int32 `protobuf:"varint,1,opt,name=rowsAffected" json:"rowsAffected,omitempty"`
	ErrorCode    int64 `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *UpdatePartnerUserResponse) Reset()                    { *m = UpdatePartnerUserResponse{} }
func (m *UpdatePartnerUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePartnerUserResponse) ProtoMessage()               {}
func (*UpdatePartnerUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{24} }

func (m *UpdatePartnerUserResponse) GetRowsAffected() int32 {
	if m != nil {
		return m.RowsAffected
	}
	return 0
}

func (m *UpdatePartnerUserResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type UpdatePartnerUserStatusRequest struct {
	PartnerType    int32  `protobuf:"varint,1,opt,name=partnerType" json:"partnerType,omitempty"`
	SubPartnerType int32  `protobuf:"varint,2,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,3,opt,name=partnerId" json:"partnerId,omitempty"`
	PartnerStatus  int32  `protobuf:"varint,4,opt,name=partnerStatus" json:"partnerStatus,omitempty"`
}

func (m *UpdatePartnerUserStatusRequest) Reset()         { *m = UpdatePartnerUserStatusRequest{} }
func (m *UpdatePartnerUserStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePartnerUserStatusRequest) ProtoMessage()    {}
func (*UpdatePartnerUserStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{25}
}

func (m *UpdatePartnerUserStatusRequest) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *UpdatePartnerUserStatusRequest) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *UpdatePartnerUserStatusRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *UpdatePartnerUserStatusRequest) GetPartnerStatus() int32 {
	if m != nil {
		return m.PartnerStatus
	}
	return 0
}

type UpdatePartnerUserStatusResponse struct {
	RowsAffected int32 `protobuf:"varint,1,opt,name=rowsAffected" json:"rowsAffected,omitempty"`
	ErrorCode    int64 `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *UpdatePartnerUserStatusResponse) Reset()         { *m = UpdatePartnerUserStatusResponse{} }
func (m *UpdatePartnerUserStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePartnerUserStatusResponse) ProtoMessage()    {}
func (*UpdatePartnerUserStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{26}
}

func (m *UpdatePartnerUserStatusResponse) GetRowsAffected() int32 {
	if m != nil {
		return m.RowsAffected
	}
	return 0
}

func (m *UpdatePartnerUserStatusResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type QueryPartnerUserByParamRequest struct {
	UserId         int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PartnerType    int32  `protobuf:"varint,2,opt,name=partnerType" json:"partnerType,omitempty"`
	SubPartnerType int32  `protobuf:"varint,3,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,4,opt,name=partnerId" json:"partnerId,omitempty"`
	SubPartnerId   string `protobuf:"bytes,5,opt,name=subPartnerId" json:"subPartnerId,omitempty"`
	PartnerStatus  int32  `protobuf:"varint,6,opt,name=partnerStatus" json:"partnerStatus,omitempty"`
	NeedDetail     int32  `protobuf:"varint,7,opt,name=needDetail" json:"needDetail,omitempty"`
}

func (m *QueryPartnerUserByParamRequest) Reset()         { *m = QueryPartnerUserByParamRequest{} }
func (m *QueryPartnerUserByParamRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPartnerUserByParamRequest) ProtoMessage()    {}
func (*QueryPartnerUserByParamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{27}
}

func (m *QueryPartnerUserByParamRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryPartnerUserByParamRequest) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *QueryPartnerUserByParamRequest) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *QueryPartnerUserByParamRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *QueryPartnerUserByParamRequest) GetSubPartnerId() string {
	if m != nil {
		return m.SubPartnerId
	}
	return ""
}

func (m *QueryPartnerUserByParamRequest) GetPartnerStatus() int32 {
	if m != nil {
		return m.PartnerStatus
	}
	return 0
}

func (m *QueryPartnerUserByParamRequest) GetNeedDetail() int32 {
	if m != nil {
		return m.NeedDetail
	}
	return 0
}

type CreatePartnerUserRequest struct {
	UserId         int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PartnerType    int32  `protobuf:"varint,2,opt,name=partnerType" json:"partnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,3,opt,name=partnerId" json:"partnerId,omitempty"`
	PartnerStatus  int32  `protobuf:"varint,4,opt,name=partnerStatus" json:"partnerStatus,omitempty"`
	BindTime       int64  `protobuf:"varint,5,opt,name=bindTime" json:"bindTime,omitempty"`
	RemarkSpec     string `protobuf:"bytes,6,opt,name=remarkSpec" json:"remarkSpec,omitempty"`
	Nickname       string `protobuf:"bytes,7,opt,name=nickname" json:"nickname,omitempty"`
	ImgUrl         string `protobuf:"bytes,8,opt,name=imgUrl" json:"imgUrl,omitempty"`
	Gender         int32  `protobuf:"varint,9,opt,name=gender" json:"gender,omitempty"`
	PlatForm       int32  `protobuf:"varint,10,opt,name=platForm" json:"platForm,omitempty"`
	SubPartnerType int32  `protobuf:"varint,11,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	SubPartnerId   string `protobuf:"bytes,12,opt,name=subPartnerId" json:"subPartnerId,omitempty"`
	ExtDetail      string `protobuf:"bytes,13,opt,name=extDetail" json:"extDetail,omitempty"`
}

func (m *CreatePartnerUserRequest) Reset()                    { *m = CreatePartnerUserRequest{} }
func (m *CreatePartnerUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePartnerUserRequest) ProtoMessage()               {}
func (*CreatePartnerUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{28} }

func (m *CreatePartnerUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *CreatePartnerUserRequest) GetPartnerStatus() int32 {
	if m != nil {
		return m.PartnerStatus
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetBindTime() int64 {
	if m != nil {
		return m.BindTime
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetRemarkSpec() string {
	if m != nil {
		return m.RemarkSpec
	}
	return ""
}

func (m *CreatePartnerUserRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *CreatePartnerUserRequest) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *CreatePartnerUserRequest) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetPlatForm() int32 {
	if m != nil {
		return m.PlatForm
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *CreatePartnerUserRequest) GetSubPartnerId() string {
	if m != nil {
		return m.SubPartnerId
	}
	return ""
}

func (m *CreatePartnerUserRequest) GetExtDetail() string {
	if m != nil {
		return m.ExtDetail
	}
	return ""
}

type BindPartnerUserRequest struct {
	UserId         int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PartnerType    int32  `protobuf:"varint,2,opt,name=partnerType" json:"partnerType,omitempty"`
	SubPartnerType int32  `protobuf:"varint,3,opt,name=subPartnerType" json:"subPartnerType,omitempty"`
	PartnerId      string `protobuf:"bytes,4,opt,name=partnerId" json:"partnerId,omitempty"`
	SubPartnerId   string `protobuf:"bytes,5,opt,name=subPartnerId" json:"subPartnerId,omitempty"`
	Nickname       string `protobuf:"bytes,6,opt,name=nickname" json:"nickname,omitempty"`
	ImgUrl         string `protobuf:"bytes,7,opt,name=imgUrl" json:"imgUrl,omitempty"`
}

func (m *BindPartnerUserRequest) Reset()                    { *m = BindPartnerUserRequest{} }
func (m *BindPartnerUserRequest) String() string            { return proto.CompactTextString(m) }
func (*BindPartnerUserRequest) ProtoMessage()               {}
func (*BindPartnerUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{29} }

func (m *BindPartnerUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BindPartnerUserRequest) GetPartnerType() int32 {
	if m != nil {
		return m.PartnerType
	}
	return 0
}

func (m *BindPartnerUserRequest) GetSubPartnerType() int32 {
	if m != nil {
		return m.SubPartnerType
	}
	return 0
}

func (m *BindPartnerUserRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *BindPartnerUserRequest) GetSubPartnerId() string {
	if m != nil {
		return m.SubPartnerId
	}
	return ""
}

func (m *BindPartnerUserRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *BindPartnerUserRequest) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

type CreateUserLocationRequest struct {
	UserId    int64   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	LocTime   int64   `protobuf:"varint,2,opt,name=loc_time,json=locTime" json:"loc_time,omitempty"`
	Lng       float32 `protobuf:"fixed32,3,opt,name=lng" json:"lng,omitempty"`
	Lat       float32 `protobuf:"fixed32,4,opt,name=lat" json:"lat,omitempty"`
	Cityindex int32   `protobuf:"varint,5,opt,name=cityindex" json:"cityindex,omitempty"`
}

func (m *CreateUserLocationRequest) Reset()                    { *m = CreateUserLocationRequest{} }
func (m *CreateUserLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserLocationRequest) ProtoMessage()               {}
func (*CreateUserLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{30} }

func (m *CreateUserLocationRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateUserLocationRequest) GetLocTime() int64 {
	if m != nil {
		return m.LocTime
	}
	return 0
}

func (m *CreateUserLocationRequest) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *CreateUserLocationRequest) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CreateUserLocationRequest) GetCityindex() int32 {
	if m != nil {
		return m.Cityindex
	}
	return 0
}

type CreateUserLocationResponse struct {
	ErrorCode int32  `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Values    *Value `protobuf:"bytes,3,opt,name=values" json:"values,omitempty"`
}

func (m *CreateUserLocationResponse) Reset()                    { *m = CreateUserLocationResponse{} }
func (m *CreateUserLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserLocationResponse) ProtoMessage()               {}
func (*CreateUserLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{31} }

func (m *CreateUserLocationResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CreateUserLocationResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CreateUserLocationResponse) GetValues() *Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type Value struct {
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{32} }

type GetUserLocationRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetUserLocationRequest) Reset()                    { *m = GetUserLocationRequest{} }
func (m *GetUserLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserLocationRequest) ProtoMessage()               {}
func (*GetUserLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{33} }

func (m *GetUserLocationRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserLocationResponse struct {
	ErrorCode int32  `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	PageMg    *Page  `protobuf:"bytes,3,opt,name=pageMg" json:"pageMg,omitempty"`
}

func (m *GetUserLocationResponse) Reset()                    { *m = GetUserLocationResponse{} }
func (m *GetUserLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserLocationResponse) ProtoMessage()               {}
func (*GetUserLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{34} }

func (m *GetUserLocationResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GetUserLocationResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetUserLocationResponse) GetPageMg() *Page {
	if m != nil {
		return m.PageMg
	}
	return nil
}

type Page struct {
	DataMg *Data `protobuf:"bytes,1,opt,name=dataMg" json:"dataMg,omitempty"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{35} }

func (m *Page) GetDataMg() *Data {
	if m != nil {
		return m.DataMg
	}
	return nil
}

type Data struct {
	UserId    int64   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	LocTime   int64   `protobuf:"varint,2,opt,name=loc_time,json=locTime" json:"loc_time,omitempty"`
	Lng       float32 `protobuf:"fixed32,3,opt,name=lng" json:"lng,omitempty"`
	Lat       float32 `protobuf:"fixed32,4,opt,name=lat" json:"lat,omitempty"`
	Cityindex int32   `protobuf:"varint,5,opt,name=cityindex" json:"cityindex,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{36} }

func (m *Data) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Data) GetLocTime() int64 {
	if m != nil {
		return m.LocTime
	}
	return 0
}

func (m *Data) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *Data) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Data) GetCityindex() int32 {
	if m != nil {
		return m.Cityindex
	}
	return 0
}

type QueryFreeGoUserIdRequest struct {
	UserId   int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PlatForm int32 `protobuf:"varint,2,opt,name=platForm" json:"platForm,omitempty"`
}

func (m *QueryFreeGoUserIdRequest) Reset()                    { *m = QueryFreeGoUserIdRequest{} }
func (m *QueryFreeGoUserIdRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryFreeGoUserIdRequest) ProtoMessage()               {}
func (*QueryFreeGoUserIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{37} }

func (m *QueryFreeGoUserIdRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryFreeGoUserIdRequest) GetPlatForm() int32 {
	if m != nil {
		return m.PlatForm
	}
	return 0
}

type QueryFreeGoUserIdResponse struct {
	FreeGoUserId string `protobuf:"bytes,1,opt,name=freeGoUserId" json:"freeGoUserId,omitempty"`
	ErrorCode    int64  `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *QueryFreeGoUserIdResponse) Reset()                    { *m = QueryFreeGoUserIdResponse{} }
func (m *QueryFreeGoUserIdResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryFreeGoUserIdResponse) ProtoMessage()               {}
func (*QueryFreeGoUserIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{38} }

func (m *QueryFreeGoUserIdResponse) GetFreeGoUserId() string {
	if m != nil {
		return m.FreeGoUserId
	}
	return ""
}

func (m *QueryFreeGoUserIdResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type QueryFreeGoTokenRequest struct {
	UserId   int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PlatForm int32 `protobuf:"varint,2,opt,name=platForm" json:"platForm,omitempty"`
}

func (m *QueryFreeGoTokenRequest) Reset()                    { *m = QueryFreeGoTokenRequest{} }
func (m *QueryFreeGoTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryFreeGoTokenRequest) ProtoMessage()               {}
func (*QueryFreeGoTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{39} }

func (m *QueryFreeGoTokenRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryFreeGoTokenRequest) GetPlatForm() int32 {
	if m != nil {
		return m.PlatForm
	}
	return 0
}

type QueryFreeGoTokenResponse struct {
	FreeGoToken string `protobuf:"bytes,1,opt,name=freeGoToken" json:"freeGoToken,omitempty"`
	ErrorCode   int64  `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *QueryFreeGoTokenResponse) Reset()                    { *m = QueryFreeGoTokenResponse{} }
func (m *QueryFreeGoTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryFreeGoTokenResponse) ProtoMessage()               {}
func (*QueryFreeGoTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{40} }

func (m *QueryFreeGoTokenResponse) GetFreeGoToken() string {
	if m != nil {
		return m.FreeGoToken
	}
	return ""
}

func (m *QueryFreeGoTokenResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type QueryUserZhimaScoreRequest struct {
	UserId int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	City   int32  `protobuf:"varint,2,opt,name=city" json:"city,omitempty"`
	Tel    string `protobuf:"bytes,3,opt,name=tel" json:"tel,omitempty"`
}

func (m *QueryUserZhimaScoreRequest) Reset()                    { *m = QueryUserZhimaScoreRequest{} }
func (m *QueryUserZhimaScoreRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryUserZhimaScoreRequest) ProtoMessage()               {}
func (*QueryUserZhimaScoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{41} }

func (m *QueryUserZhimaScoreRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueryUserZhimaScoreRequest) GetCity() int32 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *QueryUserZhimaScoreRequest) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

type QueryUserZhimaScoreResponse struct {
	Score        int64 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	IsAuthorized int64 `protobuf:"varint,2,opt,name=isAuthorized" json:"isAuthorized,omitempty"`
	IsFreeBond   bool  `protobuf:"varint,3,opt,name=isFreeBond" json:"isFreeBond,omitempty"`
	ErrorCode    int64 `protobuf:"varint,4,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *QueryUserZhimaScoreResponse) Reset()                    { *m = QueryUserZhimaScoreResponse{} }
func (m *QueryUserZhimaScoreResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryUserZhimaScoreResponse) ProtoMessage()               {}
func (*QueryUserZhimaScoreResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{42} }

func (m *QueryUserZhimaScoreResponse) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *QueryUserZhimaScoreResponse) GetIsAuthorized() int64 {
	if m != nil {
		return m.IsAuthorized
	}
	return 0
}

func (m *QueryUserZhimaScoreResponse) GetIsFreeBond() bool {
	if m != nil {
		return m.IsFreeBond
	}
	return false
}

func (m *QueryUserZhimaScoreResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type UpdateUserBalanceRequest struct {
	UserId   int64   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Type     int32   `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Balance  float32 `protobuf:"fixed32,3,opt,name=balance" json:"balance,omitempty"`
	Fbalance float32 `protobuf:"fixed32,4,opt,name=fbalance" json:"fbalance,omitempty"`
}

func (m *UpdateUserBalanceRequest) Reset()                    { *m = UpdateUserBalanceRequest{} }
func (m *UpdateUserBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserBalanceRequest) ProtoMessage()               {}
func (*UpdateUserBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{43} }

func (m *UpdateUserBalanceRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UpdateUserBalanceRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdateUserBalanceRequest) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *UpdateUserBalanceRequest) GetFbalance() float32 {
	if m != nil {
		return m.Fbalance
	}
	return 0
}

type CheckUserIdCardNameRequest struct {
	UserId   int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Idcard   string `protobuf:"bytes,2,opt,name=idcard" json:"idcard,omitempty"`
	Realname string `protobuf:"bytes,3,opt,name=realname" json:"realname,omitempty"`
}

func (m *CheckUserIdCardNameRequest) Reset()                    { *m = CheckUserIdCardNameRequest{} }
func (m *CheckUserIdCardNameRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckUserIdCardNameRequest) ProtoMessage()               {}
func (*CheckUserIdCardNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{44} }

func (m *CheckUserIdCardNameRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CheckUserIdCardNameRequest) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *CheckUserIdCardNameRequest) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

type CheckUserIdCardNameResponse struct {
	ErrorCode int64 `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *CheckUserIdCardNameResponse) Reset()                    { *m = CheckUserIdCardNameResponse{} }
func (m *CheckUserIdCardNameResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckUserIdCardNameResponse) ProtoMessage()               {}
func (*CheckUserIdCardNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{45} }

func (m *CheckUserIdCardNameResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "ofo.user.v1.userInfo")
	proto.RegisterType((*SimpleUserInfo)(nil), "ofo.user.v1.simpleUserInfo")
	proto.RegisterType((*PartnerUser)(nil), "ofo.user.v1.partnerUser")
	proto.RegisterType((*Userlocation)(nil), "ofo.user.v1.userlocation")
	proto.RegisterType((*FreeGoUser)(nil), "ofo.user.v1.freeGoUser")
	proto.RegisterType((*FreeGoUserToken)(nil), "ofo.user.v1.freeGoUserToken")
	proto.RegisterType((*QueryUserByTokenRequest)(nil), "ofo.user.v1.queryUserByTokenRequest")
	proto.RegisterType((*QueryUserByTelRequest)(nil), "ofo.user.v1.queryUserByTelRequest")
	proto.RegisterType((*QueryUserResponse)(nil), "ofo.user.v1.queryUserResponse")
	proto.RegisterType((*QueryUserByIdRequest)(nil), "ofo.user.v1.queryUserByIdRequest")
	proto.RegisterType((*QueryUserByIdResponse)(nil), "ofo.user.v1.queryUserByIdResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "ofo.user.v1.createUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "ofo.user.v1.createUserResponse")
	proto.RegisterType((*UpdateFreeBondRequest)(nil), "ofo.user.v1.updateFreeBondRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "ofo.user.v1.updateUserRequest")
	proto.RegisterType((*UpdateUserResponse)(nil), "ofo.user.v1.updateUserResponse")
	proto.RegisterType((*UpdatezxUserRequest)(nil), "ofo.user.v1.updatezxUserRequest")
	proto.RegisterType((*UpdatezxUserResponse)(nil), "ofo.user.v1.updatezxUserResponse")
	proto.RegisterType((*CreatezxUserRequest)(nil), "ofo.user.v1.createzxUserRequest")
	proto.RegisterType((*CreatezxUserResponse)(nil), "ofo.user.v1.createzxUserResponse")
	proto.RegisterType((*QueryzxUserByUserIdRequest)(nil), "ofo.user.v1.queryzxUserByUserIdRequest")
	proto.RegisterType((*QueryzxUserByUserIdResponse)(nil), "ofo.user.v1.queryzxUserByUserIdResponse")
	proto.RegisterType((*QueryzxUserByUserIdAndStatusRequest)(nil), "ofo.user.v1.queryzxUserByUserIdAndStatusRequest")
	proto.RegisterType((*UpdatePartnerUserRequest)(nil), "ofo.user.v1.updatePartnerUserRequest")
	proto.RegisterType((*UpdatePartnerUserResponse)(nil), "ofo.user.v1.updatePartnerUserResponse")
	proto.RegisterType((*UpdatePartnerUserStatusRequest)(nil), "ofo.user.v1.updatePartnerUserStatusRequest")
	proto.RegisterType((*UpdatePartnerUserStatusResponse)(nil), "ofo.user.v1.updatePartnerUserStatusResponse")
	proto.RegisterType((*QueryPartnerUserByParamRequest)(nil), "ofo.user.v1.queryPartnerUserByParamRequest")
	proto.RegisterType((*CreatePartnerUserRequest)(nil), "ofo.user.v1.createPartnerUserRequest")
	proto.RegisterType((*BindPartnerUserRequest)(nil), "ofo.user.v1.bindPartnerUserRequest")
	proto.RegisterType((*CreateUserLocationRequest)(nil), "ofo.user.v1.createUserLocationRequest")
	proto.RegisterType((*CreateUserLocationResponse)(nil), "ofo.user.v1.createUserLocationResponse")
	proto.RegisterType((*Value)(nil), "ofo.user.v1.value")
	proto.RegisterType((*GetUserLocationRequest)(nil), "ofo.user.v1.getUserLocationRequest")
	proto.RegisterType((*GetUserLocationResponse)(nil), "ofo.user.v1.getUserLocationResponse")
	proto.RegisterType((*Page)(nil), "ofo.user.v1.page")
	proto.RegisterType((*Data)(nil), "ofo.user.v1.data")
	proto.RegisterType((*QueryFreeGoUserIdRequest)(nil), "ofo.user.v1.queryFreeGoUserIdRequest")
	proto.RegisterType((*QueryFreeGoUserIdResponse)(nil), "ofo.user.v1.queryFreeGoUserIdResponse")
	proto.RegisterType((*QueryFreeGoTokenRequest)(nil), "ofo.user.v1.queryFreeGoTokenRequest")
	proto.RegisterType((*QueryFreeGoTokenResponse)(nil), "ofo.user.v1.queryFreeGoTokenResponse")
	proto.RegisterType((*QueryUserZhimaScoreRequest)(nil), "ofo.user.v1.queryUserZhimaScoreRequest")
	proto.RegisterType((*QueryUserZhimaScoreResponse)(nil), "ofo.user.v1.queryUserZhimaScoreResponse")
	proto.RegisterType((*UpdateUserBalanceRequest)(nil), "ofo.user.v1.updateUserBalanceRequest")
	proto.RegisterType((*CheckUserIdCardNameRequest)(nil), "ofo.user.v1.checkUserIdCardNameRequest")
	proto.RegisterType((*CheckUserIdCardNameResponse)(nil), "ofo.user.v1.checkUserIdCardNameResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	QueryUserByToken(ctx context.Context, in *QueryUserByTokenRequest, opts ...grpc.CallOption) (*UserInfo, error)
	QueryUserByTel(ctx context.Context, in *QueryUserByTelRequest, opts ...grpc.CallOption) (*UserInfo, error)
	QueryUserById(ctx context.Context, in *QueryUserByIdRequest, opts ...grpc.CallOption) (*UserInfo, error)
	QuerySimpleUserById(ctx context.Context, in *QueryUserByIdRequest, opts ...grpc.CallOption) (*SimpleUserInfo, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	UpdateUserFreeBond(ctx context.Context, in *UpdateFreeBondRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	UpdatezxUser(ctx context.Context, in *UpdatezxUserRequest, opts ...grpc.CallOption) (*UpdatezxUserResponse, error)
	CreatezxUser(ctx context.Context, in *CreatezxUserRequest, opts ...grpc.CallOption) (*CreatezxUserResponse, error)
	QueryzxUserByUserId(ctx context.Context, in *QueryzxUserByUserIdRequest, opts ...grpc.CallOption) (*QueryzxUserByUserIdResponse, error)
	QueryzxUserByUserIdAndStatus(ctx context.Context, in *QueryzxUserByUserIdAndStatusRequest, opts ...grpc.CallOption) (*QueryzxUserByUserIdResponse, error)
	UpdatePartnerUser(ctx context.Context, in *UpdatePartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error)
	UpdatePartnerUserStatus(ctx context.Context, in *UpdatePartnerUserStatusRequest, opts ...grpc.CallOption) (*UpdatePartnerUserStatusResponse, error)
	BindPartnerUser(ctx context.Context, in *BindPartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error)
	UnBindPartnerUser(ctx context.Context, in *BindPartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error)
	CreatePartnerUser(ctx context.Context, in *CreatePartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error)
	QueryPartnerUserByParam(ctx context.Context, in *QueryPartnerUserByParamRequest, opts ...grpc.CallOption) (*PartnerUser, error)
	CreateUserLocation(ctx context.Context, in *CreateUserLocationRequest, opts ...grpc.CallOption) (*CreateUserLocationResponse, error)
	GetUserLocationByUserId(ctx context.Context, in *GetUserLocationRequest, opts ...grpc.CallOption) (*GetUserLocationResponse, error)
	QueryFreeGoUserIdByOfoUserId(ctx context.Context, in *QueryFreeGoUserIdRequest, opts ...grpc.CallOption) (*QueryFreeGoUserIdResponse, error)
	QueryFreeGoTokenByOfoUserId(ctx context.Context, in *QueryFreeGoTokenRequest, opts ...grpc.CallOption) (*QueryFreeGoTokenResponse, error)
	UpdateUserBalance(ctx context.Context, in *UpdateUserBalanceRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	CheckUserIdCardName(ctx context.Context, in *CheckUserIdCardNameRequest, opts ...grpc.CallOption) (*CheckUserIdCardNameResponse, error)
	// alipay
	QueryUserZhimaScore(ctx context.Context, in *QueryUserZhimaScoreRequest, opts ...grpc.CallOption) (*QueryUserZhimaScoreResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) QueryUserByToken(ctx context.Context, in *QueryUserByTokenRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryUserByToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryUserByTel(ctx context.Context, in *QueryUserByTelRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryUserByTel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryUserById(ctx context.Context, in *QueryUserByIdRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryUserById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QuerySimpleUserById(ctx context.Context, in *QueryUserByIdRequest, opts ...grpc.CallOption) (*SimpleUserInfo, error) {
	out := new(SimpleUserInfo)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/querySimpleUserById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserFreeBond(ctx context.Context, in *UpdateFreeBondRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updateUserFreeBond", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/createUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatezxUser(ctx context.Context, in *UpdatezxUserRequest, opts ...grpc.CallOption) (*UpdatezxUserResponse, error) {
	out := new(UpdatezxUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updatezxUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreatezxUser(ctx context.Context, in *CreatezxUserRequest, opts ...grpc.CallOption) (*CreatezxUserResponse, error) {
	out := new(CreatezxUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/createzxUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryzxUserByUserId(ctx context.Context, in *QueryzxUserByUserIdRequest, opts ...grpc.CallOption) (*QueryzxUserByUserIdResponse, error) {
	out := new(QueryzxUserByUserIdResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryzxUserByUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryzxUserByUserIdAndStatus(ctx context.Context, in *QueryzxUserByUserIdAndStatusRequest, opts ...grpc.CallOption) (*QueryzxUserByUserIdResponse, error) {
	out := new(QueryzxUserByUserIdResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryzxUserByUserIdAndStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatePartnerUser(ctx context.Context, in *UpdatePartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error) {
	out := new(UpdatePartnerUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updatePartnerUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatePartnerUserStatus(ctx context.Context, in *UpdatePartnerUserStatusRequest, opts ...grpc.CallOption) (*UpdatePartnerUserStatusResponse, error) {
	out := new(UpdatePartnerUserStatusResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updatePartnerUserStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) BindPartnerUser(ctx context.Context, in *BindPartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error) {
	out := new(UpdatePartnerUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/bindPartnerUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UnBindPartnerUser(ctx context.Context, in *BindPartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error) {
	out := new(UpdatePartnerUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/unBindPartnerUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreatePartnerUser(ctx context.Context, in *CreatePartnerUserRequest, opts ...grpc.CallOption) (*UpdatePartnerUserResponse, error) {
	out := new(UpdatePartnerUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/createPartnerUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryPartnerUserByParam(ctx context.Context, in *QueryPartnerUserByParamRequest, opts ...grpc.CallOption) (*PartnerUser, error) {
	out := new(PartnerUser)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryPartnerUserByParam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUserLocation(ctx context.Context, in *CreateUserLocationRequest, opts ...grpc.CallOption) (*CreateUserLocationResponse, error) {
	out := new(CreateUserLocationResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/createUserLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserLocationByUserId(ctx context.Context, in *GetUserLocationRequest, opts ...grpc.CallOption) (*GetUserLocationResponse, error) {
	out := new(GetUserLocationResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/getUserLocationByUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryFreeGoUserIdByOfoUserId(ctx context.Context, in *QueryFreeGoUserIdRequest, opts ...grpc.CallOption) (*QueryFreeGoUserIdResponse, error) {
	out := new(QueryFreeGoUserIdResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryFreeGoUserIdByOfoUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryFreeGoTokenByOfoUserId(ctx context.Context, in *QueryFreeGoTokenRequest, opts ...grpc.CallOption) (*QueryFreeGoTokenResponse, error) {
	out := new(QueryFreeGoTokenResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryFreeGoTokenByOfoUserId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserBalance(ctx context.Context, in *UpdateUserBalanceRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/updateUserBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CheckUserIdCardName(ctx context.Context, in *CheckUserIdCardNameRequest, opts ...grpc.CallOption) (*CheckUserIdCardNameResponse, error) {
	out := new(CheckUserIdCardNameResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/checkUserIdCardName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryUserZhimaScore(ctx context.Context, in *QueryUserZhimaScoreRequest, opts ...grpc.CallOption) (*QueryUserZhimaScoreResponse, error) {
	out := new(QueryUserZhimaScoreResponse)
	err := grpc.Invoke(ctx, "/ofo.user.v1.userService/queryUserZhimaScore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	QueryUserByToken(context.Context, *QueryUserByTokenRequest) (*UserInfo, error)
	QueryUserByTel(context.Context, *QueryUserByTelRequest) (*UserInfo, error)
	QueryUserById(context.Context, *QueryUserByIdRequest) (*UserInfo, error)
	QuerySimpleUserById(context.Context, *QueryUserByIdRequest) (*SimpleUserInfo, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	UpdateUserFreeBond(context.Context, *UpdateFreeBondRequest) (*UpdateUserResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	UpdatezxUser(context.Context, *UpdatezxUserRequest) (*UpdatezxUserResponse, error)
	CreatezxUser(context.Context, *CreatezxUserRequest) (*CreatezxUserResponse, error)
	QueryzxUserByUserId(context.Context, *QueryzxUserByUserIdRequest) (*QueryzxUserByUserIdResponse, error)
	QueryzxUserByUserIdAndStatus(context.Context, *QueryzxUserByUserIdAndStatusRequest) (*QueryzxUserByUserIdResponse, error)
	UpdatePartnerUser(context.Context, *UpdatePartnerUserRequest) (*UpdatePartnerUserResponse, error)
	UpdatePartnerUserStatus(context.Context, *UpdatePartnerUserStatusRequest) (*UpdatePartnerUserStatusResponse, error)
	BindPartnerUser(context.Context, *BindPartnerUserRequest) (*UpdatePartnerUserResponse, error)
	UnBindPartnerUser(context.Context, *BindPartnerUserRequest) (*UpdatePartnerUserResponse, error)
	CreatePartnerUser(context.Context, *CreatePartnerUserRequest) (*UpdatePartnerUserResponse, error)
	QueryPartnerUserByParam(context.Context, *QueryPartnerUserByParamRequest) (*PartnerUser, error)
	CreateUserLocation(context.Context, *CreateUserLocationRequest) (*CreateUserLocationResponse, error)
	GetUserLocationByUserId(context.Context, *GetUserLocationRequest) (*GetUserLocationResponse, error)
	QueryFreeGoUserIdByOfoUserId(context.Context, *QueryFreeGoUserIdRequest) (*QueryFreeGoUserIdResponse, error)
	QueryFreeGoTokenByOfoUserId(context.Context, *QueryFreeGoTokenRequest) (*QueryFreeGoTokenResponse, error)
	UpdateUserBalance(context.Context, *UpdateUserBalanceRequest) (*UpdateUserResponse, error)
	CheckUserIdCardName(context.Context, *CheckUserIdCardNameRequest) (*CheckUserIdCardNameResponse, error)
	// alipay
	QueryUserZhimaScore(context.Context, *QueryUserZhimaScoreRequest) (*QueryUserZhimaScoreResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_QueryUserByToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUserByTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryUserByToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryUserByToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryUserByToken(ctx, req.(*QueryUserByTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryUserByTel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUserByTelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryUserByTel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryUserByTel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryUserByTel(ctx, req.(*QueryUserByTelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUserByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryUserById(ctx, req.(*QueryUserByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QuerySimpleUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUserByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QuerySimpleUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QuerySimpleUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QuerySimpleUserById(ctx, req.(*QueryUserByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserFreeBond_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFreeBondRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserFreeBond(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdateUserFreeBond",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserFreeBond(ctx, req.(*UpdateFreeBondRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatezxUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatezxUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatezxUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdatezxUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatezxUser(ctx, req.(*UpdatezxUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreatezxUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatezxUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreatezxUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/CreatezxUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreatezxUser(ctx, req.(*CreatezxUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryzxUserByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryzxUserByUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryzxUserByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryzxUserByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryzxUserByUserId(ctx, req.(*QueryzxUserByUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryzxUserByUserIdAndStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryzxUserByUserIdAndStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryzxUserByUserIdAndStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryzxUserByUserIdAndStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryzxUserByUserIdAndStatus(ctx, req.(*QueryzxUserByUserIdAndStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatePartnerUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePartnerUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatePartnerUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdatePartnerUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatePartnerUser(ctx, req.(*UpdatePartnerUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatePartnerUserStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePartnerUserStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatePartnerUserStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdatePartnerUserStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatePartnerUserStatus(ctx, req.(*UpdatePartnerUserStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_BindPartnerUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindPartnerUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).BindPartnerUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/BindPartnerUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).BindPartnerUser(ctx, req.(*BindPartnerUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UnBindPartnerUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindPartnerUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UnBindPartnerUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UnBindPartnerUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UnBindPartnerUser(ctx, req.(*BindPartnerUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreatePartnerUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePartnerUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreatePartnerUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/CreatePartnerUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreatePartnerUser(ctx, req.(*CreatePartnerUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryPartnerUserByParam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPartnerUserByParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryPartnerUserByParam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryPartnerUserByParam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryPartnerUserByParam(ctx, req.(*QueryPartnerUserByParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUserLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUserLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/CreateUserLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUserLocation(ctx, req.(*CreateUserLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserLocationByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserLocationByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/GetUserLocationByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserLocationByUserId(ctx, req.(*GetUserLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryFreeGoUserIdByOfoUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryFreeGoUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryFreeGoUserIdByOfoUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryFreeGoUserIdByOfoUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryFreeGoUserIdByOfoUserId(ctx, req.(*QueryFreeGoUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryFreeGoTokenByOfoUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryFreeGoTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryFreeGoTokenByOfoUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryFreeGoTokenByOfoUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryFreeGoTokenByOfoUserId(ctx, req.(*QueryFreeGoTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/UpdateUserBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserBalance(ctx, req.(*UpdateUserBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CheckUserIdCardName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIdCardNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CheckUserIdCardName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/CheckUserIdCardName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CheckUserIdCardName(ctx, req.(*CheckUserIdCardNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryUserZhimaScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUserZhimaScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryUserZhimaScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ofo.user.v1.userService/QueryUserZhimaScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryUserZhimaScore(ctx, req.(*QueryUserZhimaScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ofo.user.v1.userService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "queryUserByToken",
			Handler:    _UserService_QueryUserByToken_Handler,
		},
		{
			MethodName: "queryUserByTel",
			Handler:    _UserService_QueryUserByTel_Handler,
		},
		{
			MethodName: "queryUserById",
			Handler:    _UserService_QueryUserById_Handler,
		},
		{
			MethodName: "querySimpleUserById",
			Handler:    _UserService_QuerySimpleUserById_Handler,
		},
		{
			MethodName: "updateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "updateUserFreeBond",
			Handler:    _UserService_UpdateUserFreeBond_Handler,
		},
		{
			MethodName: "createUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "updatezxUser",
			Handler:    _UserService_UpdatezxUser_Handler,
		},
		{
			MethodName: "createzxUser",
			Handler:    _UserService_CreatezxUser_Handler,
		},
		{
			MethodName: "queryzxUserByUserId",
			Handler:    _UserService_QueryzxUserByUserId_Handler,
		},
		{
			MethodName: "queryzxUserByUserIdAndStatus",
			Handler:    _UserService_QueryzxUserByUserIdAndStatus_Handler,
		},
		{
			MethodName: "updatePartnerUser",
			Handler:    _UserService_UpdatePartnerUser_Handler,
		},
		{
			MethodName: "updatePartnerUserStatus",
			Handler:    _UserService_UpdatePartnerUserStatus_Handler,
		},
		{
			MethodName: "bindPartnerUser",
			Handler:    _UserService_BindPartnerUser_Handler,
		},
		{
			MethodName: "unBindPartnerUser",
			Handler:    _UserService_UnBindPartnerUser_Handler,
		},
		{
			MethodName: "createPartnerUser",
			Handler:    _UserService_CreatePartnerUser_Handler,
		},
		{
			MethodName: "queryPartnerUserByParam",
			Handler:    _UserService_QueryPartnerUserByParam_Handler,
		},
		{
			MethodName: "createUserLocation",
			Handler:    _UserService_CreateUserLocation_Handler,
		},
		{
			MethodName: "getUserLocationByUserId",
			Handler:    _UserService_GetUserLocationByUserId_Handler,
		},
		{
			MethodName: "queryFreeGoUserIdByOfoUserId",
			Handler:    _UserService_QueryFreeGoUserIdByOfoUserId_Handler,
		},
		{
			MethodName: "queryFreeGoTokenByOfoUserId",
			Handler:    _UserService_QueryFreeGoTokenByOfoUserId_Handler,
		},
		{
			MethodName: "updateUserBalance",
			Handler:    _UserService_UpdateUserBalance_Handler,
		},
		{
			MethodName: "checkUserIdCardName",
			Handler:    _UserService_CheckUserIdCardName_Handler,
		},
		{
			MethodName: "queryUserZhimaScore",
			Handler:    _UserService_QueryUserZhimaScore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 2228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x41, 0x73, 0xdc, 0x58,
	0x11, 0xae, 0x91, 0x46, 0x33, 0x9e, 0x1e, 0xc7, 0xb1, 0x9f, 0x9d, 0x58, 0x99, 0x2c, 0x5e, 0xaf,
	0x36, 0xc9, 0x7a, 0x81, 0x32, 0xd9, 0x85, 0x1b, 0xa7, 0x38, 0x24, 0x94, 0x0b, 0x9c, 0xdd, 0x92,
	0x13, 0xaa, 0x08, 0xb5, 0x04, 0x8d, 0xf4, 0x66, 0x46, 0x58, 0x23, 0x4d, 0x24, 0x8d, 0xb1, 0x0d,
	0xbf, 0x60, 0x4f, 0x6c, 0x6d, 0x71, 0xe4, 0xca, 0x91, 0x2b, 0xdc, 0xe1, 0xc0, 0x5f, 0xe0, 0x5f,
	0x70, 0xe6, 0x44, 0xf5, 0x7b, 0x4f, 0xd2, 0x7b, 0x6f, 0x24, 0x8f, 0x63, 0x02, 0x5b, 0x6c, 0x71,
	0x53, 0xb7, 0x9e, 0xfa, 0xf5, 0xeb, 0xee, 0xd7, 0xfd, 0x75, 0xcf, 0x00, 0xcc, 0x33, 0x9a, 0xee,
	0xcf, 0xd2, 0x24, 0x4f, 0x48, 0x3f, 0x19, 0x25, 0xfb, 0x8c, 0x3e, 0xfd, 0xc8, 0xf9, 0xa7, 0x09,
	0x2b, 0xf8, 0x7c, 0x18, 0x8f, 0x12, 0x42, 0xa0, 0x1d, 0x7b, 0x53, 0x6a, 0xb7, 0x76, 0x5b, 0x7b,
	0x3d, 0x97, 0x3d, 0x93, 0x75, 0x30, 0xc3, 0xe9, 0xd8, 0x36, 0x18, 0x0b, 0x1f, 0x89, 0x0d, 0xdd,
	0xa1, 0x17, 0x79, 0xb1, 0x4f, 0x6d, 0x73, 0xb7, 0xb5, 0x67, 0xb8, 0x05, 0x89, 0x6b, 0x73, 0x1a,
	0xd9, 0x6d, 0xbe, 0x36, 0xa7, 0x11, 0xae, 0x9d, 0xa5, 0xa1, 0x9f, 0x04, 0xd4, 0xb6, 0x18, 0xb7,
	0x20, 0x71, 0xad, 0x1f, 0x65, 0x76, 0x87, 0xaf, 0xf5, 0xa3, 0x8c, 0x6c, 0x81, 0x95, 0x78, 0xf3,
	0x7c, 0x62, 0x77, 0x77, 0x5b, 0x7b, 0x96, 0xcb, 0x09, 0xb2, 0x03, 0x90, 0xf9, 0x93, 0x24, 0x89,
	0x1e, 0xa3, 0x90, 0x15, 0xb6, 0x5c, 0xe2, 0x90, 0x35, 0x30, 0xc2, 0xc0, 0xee, 0xed, 0xb6, 0xf6,
	0x4c, 0xd7, 0x08, 0x03, 0x94, 0x3b, 0x0f, 0x03, 0x1b, 0x18, 0x03, 0x1f, 0x91, 0xf3, 0x3a, 0x0c,
	0xec, 0x3e, 0xe7, 0xbc, 0x0e, 0x03, 0xdc, 0x29, 0x4f, 0x4e, 0x68, 0x6c, 0xaf, 0x32, 0x71, 0x9c,
	0xc0, 0xd3, 0x0f, 0x93, 0x38, 0xb0, 0x6f, 0xb0, 0xed, 0xd9, 0x33, 0x71, 0x60, 0x75, 0x94, 0x52,
	0x7a, 0x90, 0xc4, 0xc1, 0xf3, 0xf3, 0x19, 0xb5, 0xd7, 0xd8, 0x07, 0x0a, 0x8f, 0xdc, 0x86, 0x4e,
	0x18, 0xf8, 0x5e, 0x1a, 0xd8, 0x37, 0xd9, 0x5b, 0x41, 0x91, 0x01, 0xac, 0xa4, 0xd4, 0x8b, 0x98,
	0x45, 0xd7, 0xd9, 0x9b, 0x92, 0xc6, 0x53, 0xf9, 0x29, 0xf5, 0x72, 0x9a, 0x87, 0x53, 0x6a, 0x6f,
	0x30, 0xd5, 0x24, 0x0e, 0xb3, 0x05, 0x7b, 0x45, 0xd8, 0x2b, 0x4e, 0x90, 0x77, 0xa0, 0x47, 0xd3,
	0x34, 0x49, 0x99, 0x29, 0x36, 0xd9, 0x9b, 0x8a, 0x81, 0xfb, 0x8d, 0x0a, 0xc7, 0x6c, 0x31, 0xc7,
	0x94, 0x34, 0xca, 0xcb, 0x72, 0xb4, 0xcb, 0x2d, 0x7e, 0x62, 0x46, 0x38, 0x7f, 0x35, 0x60, 0x2d,
	0x0b, 0xa7, 0xb3, 0x88, 0xbe, 0xb8, 0x2c, 0x04, 0x6e, 0x43, 0x87, 0x1b, 0x5c, 0x44, 0x81, 0xa0,
	0x50, 0xe8, 0x38, 0xf5, 0x02, 0x1e, 0x06, 0x3d, 0x97, 0x13, 0xca, 0xb1, 0xdb, 0xda, 0xb1, 0xd7,
	0xc1, 0xcc, 0xe8, 0x19, 0x0b, 0x05, 0xcb, 0xc5, 0x47, 0x94, 0x31, 0x3c, 0xa7, 0x5e, 0xca, 0x02,
	0xc1, 0x72, 0x39, 0x81, 0x3b, 0x0e, 0xa7, 0x49, 0x5c, 0xc6, 0x82, 0xa0, 0x98, 0x8b, 0x02, 0xef,
	0x9c, 0x85, 0x01, 0xba, 0x28, 0xf0, 0xce, 0x35, 0x53, 0xf6, 0x9a, 0x4d, 0x09, 0xb2, 0x29, 0xf1,
	0x4c, 0xc9, 0x3c, 0xf5, 0x29, 0x8b, 0x0b, 0xcb, 0x15, 0x14, 0x37, 0x94, 0x97, 0x53, 0x16, 0x1a,
	0x96, 0xcb, 0x09, 0xd5, 0xf0, 0x37, 0x34, 0xc3, 0x3b, 0x7f, 0x32, 0xa1, 0x3f, 0xf3, 0xd2, 0x3c,
	0xa6, 0x29, 0xda, 0x11, 0x65, 0xb3, 0x2b, 0x15, 0x30, 0x2b, 0x9a, 0xae, 0xa0, 0xc8, 0x6e, 0xb9,
	0x8c, 0xc5, 0x92, 0xc1, 0x76, 0x90, 0x59, 0xb8, 0x8f, 0x20, 0x0f, 0x03, 0x61, 0xd5, 0x8a, 0x41,
	0xee, 0xc1, 0x0d, 0x41, 0x1c, 0xe7, 0x5e, 0x3e, 0xcf, 0x98, 0x79, 0x2d, 0x57, 0x65, 0xa2, 0xfd,
	0x87, 0x61, 0x1c, 0x3c, 0xc7, 0x23, 0x5b, 0x6c, 0xff, 0x92, 0x46, 0x5b, 0xa5, 0x74, 0xea, 0xa5,
	0x27, 0xc7, 0x33, 0xea, 0x8b, 0xbb, 0x27, 0x71, 0xf0, 0xdb, 0x38, 0xf4, 0x4f, 0x98, 0xef, 0xba,
	0xdc, 0x77, 0x05, 0xcd, 0xc2, 0x7c, 0x3a, 0x7e, 0x91, 0x46, 0xe2, 0x12, 0x0a, 0x0a, 0xf9, 0x63,
	0x1a, 0x07, 0x34, 0x65, 0xb6, 0xb7, 0x5c, 0x41, 0xa1, 0xac, 0x59, 0xe4, 0xe5, 0x4f, 0x93, 0x74,
	0xca, 0x4c, 0x6f, 0xb9, 0x25, 0x4d, 0x1e, 0xc0, 0x5a, 0x36, 0x1f, 0x7e, 0x2a, 0x19, 0x83, 0x7b,
	0x41, 0xe3, 0xe2, 0xf5, 0xab, 0x38, 0x87, 0x81, 0xb8, 0xaf, 0x0a, 0x8f, 0xf9, 0xe6, 0x2c, 0xff,
	0x01, 0xcd, 0xbd, 0x30, 0x62, 0xbe, 0xe9, 0xb9, 0x15, 0x43, 0xf5, 0xdc, 0x9a, 0xee, 0xb9, 0x2f,
	0x5b, 0xb0, 0x8a, 0xce, 0x89, 0x12, 0xdf, 0xcb, 0xc3, 0x24, 0x16, 0xd9, 0xa4, 0x55, 0x66, 0x13,
	0xe1, 0xca, 0x30, 0x60, 0xde, 0x12, 0xae, 0x0c, 0x03, 0x72, 0x07, 0x56, 0xa2, 0xc4, 0x7f, 0xc5,
	0xe2, 0xca, 0x64, 0x6f, 0xba, 0x51, 0xe2, 0x33, 0x1b, 0xaf, 0x83, 0x19, 0xc5, 0x63, 0xe6, 0x1b,
	0xc3, 0xc5, 0x47, 0xc6, 0xf1, 0x72, 0xe6, 0x0c, 0xe4, 0x78, 0x39, 0x6a, 0xe5, 0x87, 0xf9, 0x79,
	0x18, 0x07, 0xf4, 0x4c, 0x44, 0x7e, 0xc5, 0x70, 0xfe, 0x6c, 0x00, 0x60, 0x86, 0xf9, 0x61, 0xc2,
	0xc2, 0x69, 0x07, 0x00, 0x33, 0xa1, 0xf0, 0x39, 0xea, 0xb6, 0xe2, 0x4a, 0x1c, 0xd4, 0xd1, 0x3b,
	0xf5, 0x72, 0x2f, 0x2d, 0xae, 0x27, 0xa7, 0xd0, 0x01, 0x98, 0x87, 0x98, 0x79, 0x79, 0x2c, 0x95,
	0x34, 0x86, 0x52, 0x40, 0x67, 0x49, 0x16, 0xe6, 0x52, 0x28, 0xad, 0xb8, 0x2a, 0x13, 0x03, 0x36,
	0xa0, 0xa7, 0xa1, 0x4f, 0x9f, 0xb3, 0x6c, 0xc9, 0x33, 0xb8, 0xcc, 0x12, 0xf6, 0xe2, 0x81, 0x84,
	0xf6, 0xba, 0x2c, 0x80, 0xb6, 0xc0, 0x9a, 0x4d, 0x92, 0xb8, 0x48, 0xe2, 0x9c, 0x28, 0xd2, 0xc5,
	0x33, 0x4f, 0x5c, 0x5e, 0x91, 0x2e, 0x9e, 0x49, 0xe9, 0x02, 0x78, 0x8d, 0xc0, 0x74, 0xb1, 0xc3,
	0x2b, 0x99, 0x50, 0xba, 0xcf, 0x03, 0xb8, 0xe2, 0x38, 0xbf, 0x6f, 0xc1, 0xcd, 0xca, 0x74, 0x5c,
	0x47, 0x07, 0x56, 0x53, 0x3a, 0x4a, 0x69, 0x36, 0xe1, 0xc7, 0xe0, 0xa9, 0x4d, 0xe1, 0x91, 0x7d,
	0x20, 0x32, 0xfd, 0xe4, 0x6c, 0x16, 0xa6, 0x54, 0xf8, 0xbc, 0xe6, 0x4d, 0x55, 0x41, 0x4c, 0xb9,
	0x82, 0xec, 0x42, 0x3f, 0x97, 0x3e, 0x6f, 0xb3, 0xcf, 0x65, 0x96, 0xf3, 0x1d, 0xd8, 0x7e, 0x3d,
	0xa7, 0xe9, 0x39, 0x6a, 0x77, 0x70, 0xce, 0x24, 0xba, 0xf4, 0xf5, 0x9c, 0x66, 0x79, 0x25, 0xb2,
	0x25, 0x89, 0x74, 0x3e, 0x84, 0x5b, 0xf2, 0x07, 0x34, 0x2a, 0x96, 0x8b, 0x5a, 0xdb, 0x2a, 0x6b,
	0xad, 0xf3, 0xf7, 0x16, 0x6c, 0x94, 0x6b, 0x5d, 0x9a, 0xcd, 0x92, 0x38, 0xa3, 0x5f, 0x55, 0x4d,
	0xb7, 0xfe, 0x9d, 0x9a, 0x8e, 0x72, 0x44, 0x51, 0x47, 0x6c, 0x10, 0x06, 0xce, 0x3e, 0x6c, 0x49,
	0x66, 0x38, 0x0c, 0x0a, 0x2b, 0x34, 0xa4, 0x5a, 0xe7, 0x4b, 0x53, 0xb1, 0x1b, 0x7e, 0xf0, 0x75,
	0xb2, 0x87, 0xb8, 0x77, 0xa0, 0xa3, 0x9e, 0xfe, 0x02, 0xea, 0x59, 0xad, 0x50, 0xcf, 0x7f, 0x13,
	0xdf, 0x94, 0xc1, 0xbc, 0x21, 0x07, 0xf3, 0x5f, 0x0c, 0xd8, 0xe0, 0x95, 0x99, 0x87, 0x68, 0x43,
	0x24, 0x17, 0x25, 0x8c, 0x65, 0x57, 0xa3, 0x2a, 0x61, 0x5a, 0xe1, 0x36, 0xf5, 0xc2, 0xcd, 0x77,
	0x6c, 0xcb, 0x37, 0x52, 0xf2, 0xa3, 0xa5, 0xfa, 0x51, 0x46, 0x4b, 0x1d, 0x0d, 0x2d, 0x15, 0x31,
	0xd2, 0x95, 0x62, 0xa4, 0xf4, 0xdc, 0x8a, 0xec, 0xb9, 0x02, 0x90, 0xf4, 0x24, 0x40, 0x52, 0x42,
	0x1a, 0xa8, 0x87, 0x34, 0x7d, 0x05, 0xd2, 0xe0, 0x79, 0x78, 0x36, 0x5b, 0x15, 0xe7, 0xe1, 0xb9,
	0xd7, 0x86, 0xae, 0x3f, 0xf1, 0xe2, 0x98, 0x16, 0x45, 0xad, 0x20, 0x9d, 0x03, 0x20, 0xb2, 0x11,
	0x45, 0x5c, 0x57, 0x95, 0xcb, 0x62, 0x11, 0xa1, 0x14, 0x3e, 0x43, 0x2f, 0x7c, 0x5f, 0xb4, 0xe0,
	0xd6, 0x7c, 0x16, 0x78, 0x39, 0x7d, 0x2a, 0x5c, 0xbd, 0xe4, 0x46, 0xe1, 0x49, 0xf3, 0x0a, 0xb5,
	0xb0, 0x67, 0xb4, 0x61, 0x14, 0xc6, 0x27, 0x65, 0x85, 0xb1, 0xdc, 0x92, 0x26, 0x0f, 0x61, 0xd3,
	0x9f, 0xa7, 0x29, 0x8d, 0x73, 0x25, 0xc0, 0x78, 0x4e, 0xac, 0x7b, 0xe5, 0x3c, 0x81, 0x0d, 0xae,
	0x92, 0x1c, 0x1c, 0x4d, 0xea, 0xa0, 0x79, 0x92, 0x38, 0xa7, 0x71, 0x2e, 0xae, 0x6d, 0x41, 0x3a,
	0x3f, 0x01, 0x22, 0x8b, 0x11, 0xe6, 0xc1, 0x22, 0x90, 0xfc, 0x2a, 0x7b, 0x34, 0x1a, 0x51, 0x3f,
	0xa7, 0x85, 0xa1, 0x14, 0xde, 0x12, 0x93, 0x3d, 0x81, 0x4d, 0x2e, 0xf7, 0xe2, 0xec, 0x2a, 0x0a,
	0x56, 0x7e, 0x35, 0x64, 0xbf, 0x3a, 0x7b, 0xb0, 0xa5, 0x8a, 0x11, 0x0a, 0xae, 0x83, 0x19, 0xcf,
	0xa7, 0x42, 0x2f, 0x7c, 0x74, 0x3e, 0x83, 0x4d, 0xee, 0xe7, 0x2b, 0x6f, 0x28, 0xae, 0xa9, 0xa1,
	0x5c, 0xd3, 0x4a, 0x11, 0x53, 0x57, 0x44, 0x15, 0xdf, 0xa8, 0xc8, 0xf7, 0x60, 0xc0, 0x72, 0x29,
	0x5f, 0x78, 0xc0, 0x72, 0xea, 0xf2, 0x14, 0xfc, 0x79, 0x0b, 0xee, 0xd6, 0x7e, 0x26, 0xf6, 0xd9,
	0x86, 0x2e, 0xae, 0x7c, 0x15, 0xea, 0x07, 0xf9, 0x06, 0x40, 0x32, 0x4a, 0x5e, 0x29, 0x87, 0xe9,
	0x25, 0xa3, 0xe4, 0x90, 0x9f, 0xe7, 0x2e, 0xf4, 0x2e, 0xce, 0x8a, 0xb7, 0x02, 0xd7, 0x5c, 0x9c,
	0x1d, 0xea, 0x87, 0x6d, 0x2b, 0x87, 0x7d, 0x01, 0xef, 0xd7, 0xe8, 0xf2, 0x28, 0x0e, 0x38, 0x6e,
	0xb8, 0xae, 0x33, 0xff, 0x66, 0x80, 0xcd, 0xbd, 0xf9, 0x69, 0x85, 0xff, 0x97, 0x09, 0x5b, 0xde,
	0x06, 0x2c, 0xc2, 0x63, 0xb3, 0x16, 0x1e, 0x2b, 0xed, 0x42, 0x5b, 0x6f, 0x17, 0x74, 0xf0, 0x6c,
	0xd5, 0x80, 0xe7, 0x85, 0x96, 0xa2, 0x53, 0xd7, 0x52, 0x20, 0x0e, 0xf4, 0x72, 0xef, 0xb1, 0xb8,
	0x70, 0x5d, 0x81, 0x03, 0x2b, 0x16, 0xee, 0xc5, 0xed, 0x20, 0x70, 0x38, 0xcf, 0x87, 0x0a, 0x4f,
	0x05, 0xea, 0xa0, 0x01, 0x75, 0xe7, 0x33, 0xb8, 0x53, 0x63, 0xc9, 0xb7, 0x76, 0x7b, 0xff, 0xd8,
	0x82, 0x9d, 0x05, 0xf9, 0xaa, 0xf3, 0x35, 0xbf, 0xb4, 0xae, 0xe2, 0x17, 0x63, 0xb9, 0x5f, 0xae,
	0xd7, 0xc6, 0x39, 0x3e, 0xbc, 0xdb, 0xa8, 0xef, 0x5b, 0xb3, 0xca, 0xe7, 0x06, 0xec, 0xb0, 0x7b,
	0x21, 0x6d, 0x72, 0x80, 0x84, 0x37, 0xfd, 0xfa, 0x45, 0xf1, 0x0e, 0x40, 0x4c, 0x69, 0x20, 0x02,
	0x90, 0x03, 0x30, 0x89, 0xe3, 0xfc, 0xc1, 0x04, 0x9b, 0x67, 0xc4, 0xb7, 0x7a, 0x99, 0xff, 0xdf,
	0xd3, 0xbf, 0xe5, 0x9e, 0xde, 0xf9, 0x47, 0x0b, 0x6e, 0xe3, 0xf1, 0xff, 0x47, 0x73, 0xae, 0xec,
	0x90, 0x4e, 0xa3, 0x43, 0xba, 0xb2, 0x43, 0x9c, 0xdf, 0xb6, 0xe0, 0x4e, 0x05, 0xfa, 0x7e, 0x2c,
	0xc6, 0x15, 0xcb, 0x4e, 0x2d, 0x4f, 0x29, 0x8c, 0xda, 0x29, 0x85, 0xb9, 0x30, 0xa5, 0x68, 0x37,
	0x4c, 0x29, 0x2c, 0x7d, 0x4a, 0x71, 0x06, 0x83, 0x3a, 0x8d, 0x44, 0x6e, 0x52, 0xf2, 0x0e, 0x4f,
	0x4c, 0xd2, 0xa8, 0x72, 0x1d, 0xcc, 0x69, 0x56, 0x36, 0x5c, 0xd3, 0x6c, 0x4c, 0xbe, 0x09, 0x9d,
	0x53, 0x2f, 0x9a, 0x53, 0x8e, 0x52, 0xfa, 0x1f, 0x93, 0x7d, 0x69, 0x4a, 0xbd, 0xcf, 0x5e, 0xb9,
	0x62, 0x85, 0xd3, 0x05, 0x8b, 0x3d, 0x39, 0x0f, 0xe1, 0xf6, 0x98, 0xe6, 0x6f, 0x60, 0x11, 0x27,
	0x87, 0xed, 0x85, 0x2f, 0xae, 0xa9, 0xf1, 0x87, 0xd0, 0x99, 0x79, 0x63, 0x7a, 0x34, 0x16, 0x1a,
	0x6f, 0x28, 0x1a, 0xe3, 0x2b, 0x57, 0x2c, 0x70, 0x3e, 0x82, 0x36, 0x3e, 0xe1, 0x27, 0x58, 0x34,
	0x8f, 0xc6, 0x4c, 0xbe, 0xfe, 0x09, 0xbe, 0x72, 0xc5, 0x02, 0xe7, 0xd7, 0xd0, 0xc6, 0xa7, 0xaf,
	0xc6, 0xb5, 0xcf, 0xc0, 0x66, 0x55, 0xe1, 0x69, 0x39, 0x49, 0x59, 0x0a, 0xf7, 0x94, 0xd4, 0x60,
	0xa8, 0xa9, 0x01, 0x6b, 0x7b, 0x8d, 0xbc, 0xaa, 0x8a, 0x8d, 0x24, 0x7e, 0x31, 0x9e, 0x91, 0x79,
	0x4b, 0xaa, 0xd8, 0x91, 0x18, 0xaa, 0x70, 0xf1, 0xca, 0x50, 0xe5, 0x3a, 0xda, 0xbe, 0x54, 0x4e,
	0x2f, 0xc4, 0x09, 0x65, 0x77, 0xa1, 0x3f, 0xaa, 0xd8, 0x42, 0x57, 0x99, 0xb5, 0x44, 0xd5, 0x97,
	0x02, 0x4a, 0xe3, 0xb9, 0x5e, 0x4e, 0xc2, 0xa9, 0x77, 0xec, 0x27, 0x29, 0xbd, 0x42, 0xef, 0x85,
	0xce, 0x29, 0x7a, 0x2f, 0x7c, 0x2e, 0xba, 0x66, 0xb3, 0x9a, 0xff, 0xfc, 0xae, 0x00, 0xdc, 0xba,
	0x70, 0xa1, 0xfb, 0x16, 0x58, 0x19, 0x32, 0x84, 0x70, 0x4e, 0xa0, 0xf9, 0xc3, 0xec, 0xd1, 0x3c,
	0x9f, 0x24, 0x69, 0x78, 0x41, 0x8b, 0x39, 0xa7, 0xc2, 0xc3, 0x12, 0x13, 0x66, 0x45, 0xa3, 0xc8,
	0xb6, 0x5c, 0x71, 0x25, 0x8e, 0x7a, 0xe6, 0xb6, 0x7e, 0xe6, 0xdf, 0x14, 0x18, 0x99, 0xa1, 0x0b,
	0xde, 0x62, 0x5f, 0xa7, 0xdb, 0x6c, 0x9e, 0xc9, 0xc8, 0xbd, 0x7c, 0x5b, 0xed, 0xe5, 0x9d, 0x09,
	0x0c, 0xfc, 0x09, 0xf5, 0x4f, 0x78, 0x24, 0x3d, 0xf6, 0xd2, 0xe0, 0x99, 0x37, 0xa5, 0xd7, 0x6d,
	0xa6, 0xe4, 0x99, 0x87, 0xa9, 0xce, 0x3c, 0x9c, 0xef, 0xc3, 0xdd, 0xda, 0x9d, 0x9a, 0xf2, 0x8b,
	0x6c, 0xa4, 0x8f, 0xbf, 0x20, 0xd0, 0x67, 0x73, 0x4c, 0x9a, 0x9e, 0x86, 0x3e, 0x25, 0x9f, 0xc0,
	0xba, 0x3e, 0x28, 0x24, 0xf7, 0x94, 0x74, 0xd1, 0x30, 0x47, 0x1c, 0xdc, 0x52, 0x56, 0x95, 0xbf,
	0xed, 0xfd, 0x08, 0xd6, 0xd4, 0x41, 0x22, 0x71, 0x1a, 0xc5, 0x95, 0x53, 0xc6, 0x26, 0x61, 0x87,
	0x70, 0x43, 0x99, 0xae, 0x91, 0xf7, 0x9a, 0x64, 0x95, 0x89, 0xa3, 0x49, 0xd4, 0x0b, 0xd8, 0x64,
	0xcb, 0x8f, 0xcb, 0xdf, 0xa1, 0xae, 0x2a, 0xf0, 0xae, 0xb2, 0x44, 0xfb, 0x1d, 0xeb, 0x08, 0xa0,
	0x0a, 0x3a, 0xb2, 0xa3, 0xee, 0xad, 0x4f, 0x19, 0x06, 0xef, 0x36, 0xbe, 0x17, 0xce, 0xfb, 0xa9,
	0x3c, 0x54, 0x28, 0xe3, 0xde, 0xa9, 0xf9, 0x4c, 0x9b, 0xa7, 0x2c, 0x17, 0x7d, 0x54, 0xfc, 0x7e,
	0x55, 0xa3, 0xe9, 0xc2, 0xb0, 0x4c, 0x13, 0x57, 0x33, 0x07, 0x3a, 0x2e, 0x3a, 0x31, 0xde, 0xea,
	0x92, 0xdd, 0x9a, 0xfd, 0x95, 0x81, 0xc2, 0xe0, 0xbd, 0x4b, 0x56, 0x54, 0x42, 0xe5, 0x59, 0x81,
	0x26, 0xb4, 0x66, 0x4a, 0xa1, 0x09, 0xad, 0x1d, 0x34, 0x4c, 0x84, 0xe7, 0xd5, 0x9e, 0x9c, 0x7c,
	0xb0, 0xe8, 0xf9, 0xda, 0xc1, 0xc3, 0x60, 0x6f, 0xf9, 0x42, 0xb1, 0xd3, 0x05, 0xbc, 0x73, 0x59,
	0xf7, 0x4f, 0x1e, 0x2e, 0x93, 0xa4, 0x0f, 0x0a, 0xde, 0x60, 0xef, 0x61, 0x31, 0xd5, 0x92, 0xd0,
	0x2a, 0xb9, 0x5f, 0x63, 0xf2, 0x45, 0x34, 0x3b, 0x78, 0xb0, 0x6c, 0x99, 0xd8, 0x23, 0x87, 0xed,
	0x86, 0x5e, 0x91, 0x7c, 0xeb, 0x72, 0x11, 0xea, 0xa9, 0xbe, 0x7d, 0xb5, 0xc5, 0x62, 0xd7, 0x9f,
	0xc3, 0x4d, 0x0d, 0x85, 0x93, 0xf7, 0x15, 0x01, 0xf5, 0x18, 0xfd, 0xca, 0xa7, 0xfa, 0x05, 0x6c,
	0xcc, 0xe3, 0x83, 0xff, 0xe4, 0x0e, 0xc3, 0x62, 0x1c, 0xdd, 0xec, 0x9b, 0xa6, 0x86, 0xf0, 0x0d,
	0x4e, 0xb1, 0xdd, 0xd0, 0x61, 0x6b, 0xbe, 0xb9, 0xbc, 0x0f, 0x1f, 0xd8, 0x1a, 0xbc, 0xac, 0x14,
	0xa6, 0xf2, 0x3c, 0xb8, 0x80, 0xb5, 0xe4, 0x41, 0x43, 0xa2, 0xd0, 0x90, 0xf2, 0xe0, 0x83, 0xa5,
	0xeb, 0xc4, 0x41, 0x82, 0x05, 0xe8, 0x5c, 0x5e, 0x59, 0xd5, 0x29, 0xf5, 0x90, 0x7c, 0x70, 0xef,
	0xf2, 0x45, 0x62, 0x97, 0xa9, 0xb8, 0xaa, 0x32, 0x54, 0x3c, 0x38, 0xff, 0x64, 0x54, 0x20, 0xc1,
	0xfb, 0x8b, 0x36, 0xab, 0x41, 0xa9, 0x9a, 0x77, 0x9a, 0xc1, 0xe7, 0x2f, 0x05, 0x64, 0x92, 0xb0,
	0x9e, 0xbc, 0xdb, 0xbd, 0x26, 0x31, 0x4a, 0xc5, 0xbd, 0xbf, 0x64, 0x95, 0xd8, 0xeb, 0x67, 0xf2,
	0x7c, 0x5b, 0xe0, 0xa0, 0xda, 0x4c, 0xb0, 0x88, 0x93, 0x96, 0x57, 0x91, 0x09, 0x6c, 0xd6, 0x80,
	0x0f, 0x2d, 0x99, 0x36, 0x03, 0x21, 0x2d, 0xa1, 0x5d, 0x86, 0x63, 0x8a, 0xb4, 0xad, 0xa2, 0xcc,
	0xba, 0xb4, 0x5d, 0x0b, 0x72, 0xeb, 0x52, 0x67, 0x3d, 0x60, 0x3d, 0x68, 0xbf, 0x34, 0x66, 0xc3,
	0x61, 0x87, 0xfd, 0x6b, 0xe9, 0xbb, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x32, 0xc5, 0x8f,
	0xc3, 0x24, 0x00, 0x00,
}
